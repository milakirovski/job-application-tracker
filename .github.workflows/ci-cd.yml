name: CI/CD - Build, Push, and Deploy to Kubernetes

on:
  push:
    branches: [ master ]

jobs:
  build-and-push:
    name: Build and Push Images to Docker Hub
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 3. Extract metadata (like tags) for the Docker images
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/job-tracker-backend
            ${{ secrets.DOCKERHUB_USERNAME }}/job-tracker-frontend
          tags: |
            type=raw,value=${{ github.run_number }}

      # 4. Build and push the Backend Docker image
      - name: Build and push Backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./jobApplicationTrackerBackend
          file: ./jobApplicationTrackerBackend/DockerfileBackend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # 5. Build and push the Frontend Docker image
      - name: Build and push Frontend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./jobApplicationTrackerFrontend
          file: ./jobApplicationTrackerFrontend/DockerfileFrontend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Deploy to Kubernetes Cluster
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      # 1. Checkout the repository to access the k8s manifests
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up Kubernetes context
      - name: Set up Kubeconfig
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }} # Your KUBECONFIG file content as a secret

      # 3. Apply the Kubernetes manifests
      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f ./k8s/secrets.yml
          kubectl apply -f ./k8s/mongodb.yml
          kubectl apply -f ./k8s/backend.yml
          kubectl apply -f ./k8s/frontend.yml

      # 4. Trigger a rolling update for the deployments
      - name: Set image for Kubernetes deployments
        run: |
          kubectl set image deployment/backend-deployment backend=${{ secrets.DOCKERHUB_USERNAME }}/job-tracker-backend:${{ github.run_number }} -n job-tracker
          kubectl set image deployment/frontend-deployment frontend=${{ secrets.DOCKERHUB_USERNAME }}/job-tracker-frontend:${{ github.run_number }} -n job-tracker

