services:
  backend:
    build:
      context: ./jobApplicationTrackerBackend
      dockerfile: DockerfileBackend
    ports:
      - "8080:8080"
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/job-tracker-db?authSource=admin
    depends_on:
      mongodb:
        condition: service_healthy # healthy check to pass
    networks:
      - app-network
    restart: unless-stopped

  frontend:
    build:
      context: ./jobApplicationTrackerFrontend
      dockerfile: DockerfileFrontend
    ports:
      - "5173:80"
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped


  mongodb:
    container_name: mongodb
    image: mongo:7.0
    ports:
      - "27017:27017" # Expose for local IDE connection
    environment:
      # These variables create the initial root user for the database
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
    driver: local